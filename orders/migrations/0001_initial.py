# Generated by Django 5.2.1 on 2025-05-29 09:52

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0001_initial'),
        ('products', '0001_initial'),
        ('seasons', '0004_seasonproduct_waiting_on_room_duration'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(help_text='Otomatik oluşturulur', max_length=20, unique=True, verbose_name='Sipariş Numarası')),
                ('order_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Sipariş Tarihi')),
                ('requested_delivery_date', models.DateField(help_text='Müşterinin talep ettiği teslimat tarihi', verbose_name='İstenen Teslimat Tarihi')),
                ('actual_shipment_date', models.DateField(blank=True, help_text='Siparişin gerçekte sevk edildiği tarih', null=True, verbose_name='Fiili Sevk Tarihi')),
                ('actual_delivery_date', models.DateField(blank=True, help_text='Siparişin müşteriye teslim edildiği tarih', null=True, verbose_name='Fiili Teslimat Tarihi')),
                ('status', models.CharField(choices=[('draft', 'Taslak'), ('confirmed', 'Onaylandı'), ('waiting', 'Bekliyor'), ('planting', 'Ekimde'), ('grafting', 'Aşıda'), ('cutting', 'Kesimde'), ('in_room', 'Odada'), ('awaiting_shipment', 'Sevkiyat Bekliyor'), ('shipped', 'Sevkiyatta'), ('delivered', 'Teslim Edildi'), ('cancelled', 'İptal Edildi')], default='draft', max_length=20, verbose_name='Durum')),
                ('notes', models.TextField(blank=True, help_text='Sipariş ile ilgili özel notlar', null=True, verbose_name='Notlar')),
                ('internal_notes', models.TextField(blank=True, help_text='Müşteriye gösterilmeyen dahili notlar', null=True, verbose_name='İç Notlar')),
                ('special_packaging', models.BooleanField(default=False, help_text='Özel ambalaj gerekli mi?', verbose_name='Özel Ambalaj')),
                ('urgent', models.BooleanField(default=False, help_text='Acil sipariş mi?', verbose_name='Acil')),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Tüm kalemlerin toplam tutarı', max_digits=15, verbose_name='Toplam Tutar (TL)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_orders', to=settings.AUTH_USER_MODEL, verbose_name='Oluşturan')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='customers.customer', verbose_name='Müşteri')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='seasons.season', verbose_name='Sezon')),
            ],
            options={
                'verbose_name': 'Sipariş',
                'verbose_name_plural': 'Siparişler',
                'db_table': 'orders_order',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stem_type', models.CharField(choices=[('single', 'Tek Gövde'), ('double', 'Çift Gövde')], default='single', max_length=10, verbose_name='Gövde Tipi')),
                ('viol_type', models.CharField(choices=[('96', '96'), ('128', '128'), ('150', '150'), ('192', '192'), ('216', '216')], default='128', max_length=15, verbose_name='Viol Tipi')),
                ('quantity', models.PositiveIntegerField(help_text='Bu kalem için fide adedi', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Miktar (Adet)')),
                ('viol_count', models.PositiveIntegerField(help_text='Bu kalem için viol adedi', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Viol Adedi')),
                ('unit_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Tek fide için fiyat', max_digits=10, verbose_name='Birim Fiyat (TL)')),
                ('total_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Miktar × Birim Fiyat', max_digits=12, verbose_name='Toplam Fiyat (TL)')),
                ('notes', models.TextField(blank=True, help_text='Bu kalem için özel notlar', null=True, verbose_name='Kalem Notları')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order', verbose_name='Sipariş')),
                ('rootstock', models.ForeignKey(blank=True, help_text='Anaçsız ürünler için boş bırakılabilir', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='products.rootstock', verbose_name='Anaç')),
                ('season_product', models.ForeignKey(help_text='Çeşit, anaç ve sezon kombinasyonu', on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='seasons.seasonproduct', verbose_name='Sezonluk Ürün')),
                ('variety', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='products.variety', verbose_name='Çeşit')),
            ],
            options={
                'verbose_name': 'Sipariş Kalemi',
                'verbose_name_plural': 'Sipariş Kalemleri',
                'db_table': 'orders_orderitem',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_status', models.CharField(blank=True, choices=[('draft', 'Taslak'), ('confirmed', 'Onaylandı'), ('waiting', 'Bekliyor'), ('planting', 'Ekimde'), ('grafting', 'Aşıda'), ('cutting', 'Kesimde'), ('in_room', 'Odada'), ('awaiting_shipment', 'Sevkiyat Bekliyor'), ('shipped', 'Sevkiyatta'), ('delivered', 'Teslim Edildi'), ('cancelled', 'İptal Edildi')], max_length=20, null=True, verbose_name='Önceki Durum')),
                ('to_status', models.CharField(choices=[('draft', 'Taslak'), ('confirmed', 'Onaylandı'), ('waiting', 'Bekliyor'), ('planting', 'Ekimde'), ('grafting', 'Aşıda'), ('cutting', 'Kesimde'), ('in_room', 'Odada'), ('awaiting_shipment', 'Sevkiyat Bekliyor'), ('shipped', 'Sevkiyatta'), ('delivered', 'Teslim Edildi'), ('cancelled', 'İptal Edildi')], max_length=20, verbose_name='Yeni Durum')),
                ('changed_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Değişim Tarihi')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Değiştiren')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='orders.order', verbose_name='Sipariş')),
            ],
            options={
                'verbose_name': 'Sipariş Durum Geçmişi',
                'verbose_name_plural': 'Sipariş Durum Geçmişleri',
                'db_table': 'orders_orderstatushistory',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['customer', 'season'], name='order_customer_season_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['status'], name='order_status_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_date'], name='order_date_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['requested_delivery_date'], name='order_requested_delivery_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['order'], name='orderitem_order_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['season_product'], name='orderitem_seasonproduct_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['variety'], name='orderitem_variety_idx'),
        ),
    ]
