# Generated by Django 5.2.1 on 2025-05-28 20:55

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('start_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Sezon',
                'verbose_name_plural': 'Sezonlar',
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='SeasonProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rootstock_planting_duration', models.PositiveIntegerField(default=30, help_text='Anacın ekilmesi için gereken süre', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Anaç Ekim Süresi (Gün)')),
                ('scion_planting_duration', models.PositiveIntegerField(default=45, help_text='Kalemin ekilmesi için gereken süre', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Kalem Ekim Süresi (Gün)')),
                ('single_stem_grafting_duration', models.PositiveIntegerField(default=60, help_text='Tek gövde aşılama için gereken süre', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Tek Gövde Aşılama Süresi (Gün)')),
                ('double_stem_grafting_duration', models.PositiveIntegerField(default=75, help_text='Çift gövde aşılama için gereken süre', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Çift Gövde Aşılama Süresi (Gün)')),
                ('head_formation_duration', models.PositiveIntegerField(default=90, help_text='Kafa oluşturma için gereken süre', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Kafa Oluşturma Süresi (Gün)')),
                ('is_active', models.BooleanField(default=True, help_text='Bu ürün aktif olarak satılıyor mu?', verbose_name='Aktif')),
                ('notes', models.TextField(blank=True, help_text='Ek açıklamalar ve notlar', null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('rootstock', models.ForeignKey(blank=True, help_text='Kullanılacak anaç (opsiyonel)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='season_products', to='products.rootstock', verbose_name='Anaç')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season_products', to='seasons.season', verbose_name='Sezon')),
                ('variety', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season_products', to='products.variety', verbose_name='Çeşit')),
            ],
            options={
                'verbose_name': 'Sezonluk Ürün',
                'verbose_name_plural': 'Sezonluk Ürünler',
                'db_table': 'seasons_seasonproduct',
                'ordering': ['season__start_date', 'variety__species__name', 'variety__name'],
                'indexes': [models.Index(fields=['season', 'variety'], name='season_variety_idx'), models.Index(fields=['is_active'], name='seasonproduct_active_idx')],
                'unique_together': {('season', 'variety', 'rootstock')},
            },
        ),
    ]
